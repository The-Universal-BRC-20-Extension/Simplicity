"""Add missing fields to OPIOperation model

Revision ID: 57e32a5f24f2
Revises: af16732ce8ee
Create Date: 2025-07-12 02:57:09.818393

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '57e32a5f24f2'
down_revision: Union[str, Sequence[str], None] = 'af16732ce8ee'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_opi_operations_block_height'), table_name='opi_operations')
    op.drop_index(op.f('ix_opi_operations_opi_id'), table_name='opi_operations')
    op.drop_index(op.f('ix_opi_operations_txid'), table_name='opi_operations')
    op.drop_table('opi_operations')
    op.drop_index(op.f('ix_opi_configurations_opi_id'), table_name='opi_configurations')
    op.drop_table('opi_configurations')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('opi_configurations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('opi_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('is_enabled', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('version', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('configuration', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('opi_configurations_pkey')),
    sa.UniqueConstraint('opi_id', name=op.f('opi_configurations_opi_id_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('ix_opi_configurations_opi_id'), 'opi_configurations', ['opi_id'], unique=False)
    op.create_table('opi_operations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('opi_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('txid', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('block_height', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('operation_data', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('validation_result', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('processing_result', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('opi_operations_pkey'))
    )
    op.create_index(op.f('ix_opi_operations_txid'), 'opi_operations', ['txid'], unique=False)
    op.create_index(op.f('ix_opi_operations_opi_id'), 'opi_operations', ['opi_id'], unique=False)
    op.create_index(op.f('ix_opi_operations_block_height'), 'opi_operations', ['block_height'], unique=False)
    # ### end Alembic commands ###
