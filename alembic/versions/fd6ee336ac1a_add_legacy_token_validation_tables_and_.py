"""Add legacy token validation tables and columns

Revision ID: fd6ee336ac1a
Revises: 57e32a5f24f2
Create Date: 2025-07-14 19:40:12.521228

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'fd6ee336ac1a'
down_revision: Union[str, Sequence[str], None] = '57e32a5f24f2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Add new columns to deploys table
    op.add_column('deploys', sa.Column('is_legacy_validated', sa.Boolean(), nullable=False, server_default='false'))
    op.add_column('deploys', sa.Column('legacy_validation_result', sa.JSON(), nullable=True))
    op.add_column('deploys', sa.Column('legacy_validation_timestamp', sa.DateTime(), nullable=True))
    
    # Create legacy_tokens table
    op.create_table('legacy_tokens',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('ticker', sa.Text(), nullable=False),
    sa.Column('max_supply', sa.NUMERIC(), nullable=False),
    sa.Column('decimals', sa.INTEGER(), nullable=False),
    sa.Column('limit_per_mint', sa.NUMERIC(), nullable=True),
    sa.Column('deploy_inscription_id', sa.VARCHAR(length=100), nullable=True),
    sa.Column('block_height', sa.INTEGER(), nullable=False),
    sa.Column('deployer_address', sa.VARCHAR(length=34), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=False),
    sa.Column('last_verified_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('legacy_tokens_pkey')),
    sa.UniqueConstraint('ticker', name=op.f('legacy_tokens_ticker_key'))
    )
    op.create_index(op.f('ix_legacy_tokens_ticker'), 'legacy_tokens', ['ticker'], unique=False)
    
    # Create token_supply_tracking table
    op.create_table('token_supply_tracking',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('ticker', sa.VARCHAR(length=4), nullable=False),
    sa.Column('universal_supply', sa.NUMERIC(), nullable=False),
    sa.Column('legacy_supply', sa.NUMERIC(), nullable=False),
    sa.Column('total_supply', sa.NUMERIC(), nullable=False),
    sa.Column('no_return_amount', sa.NUMERIC(), nullable=False),
    sa.Column('last_updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('token_supply_tracking_pkey')),
    sa.UniqueConstraint('ticker', name=op.f('token_supply_tracking_ticker_key'))
    )
    op.create_index(op.f('ix_token_supply_tracking_ticker'), 'token_supply_tracking', ['ticker'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_token_supply_tracking_ticker'), table_name='token_supply_tracking')
    op.drop_table('token_supply_tracking')
    op.drop_index(op.f('ix_legacy_tokens_ticker'), table_name='legacy_tokens')
    op.drop_table('legacy_tokens')
    op.drop_column('deploys', 'legacy_validation_timestamp')
    op.drop_column('deploys', 'legacy_validation_result')
    op.drop_column('deploys', 'is_legacy_validated')
    # ### end Alembic commands ###
