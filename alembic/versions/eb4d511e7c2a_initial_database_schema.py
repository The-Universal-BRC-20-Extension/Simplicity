"""Initial database schema

Revision ID: eb4d511e7c2a
Revises: 
Create Date: 2025-07-30 23:57:36.774813

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'eb4d511e7c2a'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('balances',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('ticker', sa.String(), nullable=False),
    sa.Column('balance', sa.String(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('address', 'ticker')
    )
    op.create_index(op.f('ix_balances_address'), 'balances', ['address'], unique=False)
    op.create_index(op.f('ix_balances_ticker'), 'balances', ['ticker'], unique=False)
    op.create_table('brc20_operations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('txid', sa.String(), nullable=False),
    sa.Column('vout_index', sa.Integer(), nullable=False),
    sa.Column('operation', sa.String(), nullable=False),
    sa.Column('ticker', sa.String(), nullable=True),
    sa.Column('amount', sa.String(), nullable=True),
    sa.Column('from_address', sa.String(), nullable=True),
    sa.Column('to_address', sa.String(), nullable=True),
    sa.Column('block_height', sa.Integer(), nullable=False),
    sa.Column('block_hash', sa.String(), nullable=False),
    sa.Column('tx_index', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('is_valid', sa.Boolean(), nullable=False),
    sa.Column('error_code', sa.String(), nullable=True),
    sa.Column('error_message', sa.String(), nullable=True),
    sa.Column('raw_op_return', sa.String(), nullable=False),
    sa.Column('parsed_json', sa.String(), nullable=True),
    sa.Column('is_marketplace', sa.Boolean(), nullable=False),
    sa.Column('is_multi_transfer', sa.Boolean(), nullable=False, comment='Part of multi-transfer transaction'),
    sa.Column('multi_transfer_step', sa.Integer(), nullable=True, comment='Step index in multi-transfer (0-based)'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('txid', 'vout_index')
    )
    op.create_index(op.f('ix_brc20_operations_block_height'), 'brc20_operations', ['block_height'], unique=False)
    op.create_index(op.f('ix_brc20_operations_from_address'), 'brc20_operations', ['from_address'], unique=False)
    op.create_index(op.f('ix_brc20_operations_is_marketplace'), 'brc20_operations', ['is_marketplace'], unique=False)
    op.create_index(op.f('ix_brc20_operations_is_multi_transfer'), 'brc20_operations', ['is_multi_transfer'], unique=False)
    op.create_index(op.f('ix_brc20_operations_is_valid'), 'brc20_operations', ['is_valid'], unique=False)
    op.create_index(op.f('ix_brc20_operations_multi_transfer_step'), 'brc20_operations', ['multi_transfer_step'], unique=False)
    op.create_index(op.f('ix_brc20_operations_ticker'), 'brc20_operations', ['ticker'], unique=False)
    op.create_index(op.f('ix_brc20_operations_to_address'), 'brc20_operations', ['to_address'], unique=False)
    op.create_index(op.f('ix_brc20_operations_txid'), 'brc20_operations', ['txid'], unique=False)
    op.create_table('deploys',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ticker', sa.String(), nullable=False),
    sa.Column('max_supply', sa.String(), nullable=False),
    sa.Column('limit_per_op', sa.String(), nullable=True),
    sa.Column('deploy_txid', sa.String(), nullable=False),
    sa.Column('deploy_height', sa.Integer(), nullable=False),
    sa.Column('deploy_timestamp', sa.DateTime(), nullable=False),
    sa.Column('deployer_address', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_deploys_deployer_address'), 'deploys', ['deployer_address'], unique=False)
    op.create_index(op.f('ix_deploys_ticker'), 'deploys', ['ticker'], unique=True)
    op.create_table('processed_blocks',
    sa.Column('height', sa.Integer(), nullable=False),
    sa.Column('block_hash', sa.String(), nullable=False),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('tx_count', sa.Integer(), nullable=False),
    sa.Column('brc20_operations_found', sa.Integer(), nullable=False),
    sa.Column('brc20_operations_valid', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('height')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('processed_blocks')
    op.drop_index(op.f('ix_deploys_ticker'), table_name='deploys')
    op.drop_index(op.f('ix_deploys_deployer_address'), table_name='deploys')
    op.drop_table('deploys')
    op.drop_index(op.f('ix_brc20_operations_txid'), table_name='brc20_operations')
    op.drop_index(op.f('ix_brc20_operations_to_address'), table_name='brc20_operations')
    op.drop_index(op.f('ix_brc20_operations_ticker'), table_name='brc20_operations')
    op.drop_index(op.f('ix_brc20_operations_multi_transfer_step'), table_name='brc20_operations')
    op.drop_index(op.f('ix_brc20_operations_is_valid'), table_name='brc20_operations')
    op.drop_index(op.f('ix_brc20_operations_is_multi_transfer'), table_name='brc20_operations')
    op.drop_index(op.f('ix_brc20_operations_is_marketplace'), table_name='brc20_operations')
    op.drop_index(op.f('ix_brc20_operations_from_address'), table_name='brc20_operations')
    op.drop_index(op.f('ix_brc20_operations_block_height'), table_name='brc20_operations')
    op.drop_table('brc20_operations')
    op.drop_index(op.f('ix_balances_ticker'), table_name='balances')
    op.drop_index(op.f('ix_balances_address'), table_name='balances')
    op.drop_table('balances')
    # ### end Alembic commands ###
